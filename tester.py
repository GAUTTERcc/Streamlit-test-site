import pandas as pd
import streamlit as st
import plotly.express as px
import os

st.title("–ü—Ä–æ–≥—Ä–∞–º–∞ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ç–≤—ñ—Ç—ñ–≤")


file_path = "tweets.csv" 

if os.path.exists(file_path):
    st.success(f"‚úÖ –§–∞–π–ª {file_path} –∑–Ω–∞–π–¥–µ–Ω–æ!")


    df = pd.read_csv(file_path)

    st.subheader("üìÑ –ü–µ—Ä—à—ñ 10 –∑–∞–ø–∏—Å—ñ–≤")
    st.write(df.head(10))

    if 'date' in df.columns:
        df['date'] = pd.to_datetime(df['date'], errors='coerce')
        df['month'] = df['date'].dt.to_period('M')

        activity = df.groupby('month').size().reset_index(name='tweets_count')

        metrics = []
        if 'likes' in df.columns:
            avg_likes = df.groupby('month')['likes'].mean().reset_index(name='avg_likes')
            metrics.append(avg_likes)
        if 'retweets' in df.columns:
            avg_retweets = df.groupby('month')['retweets'].mean().reset_index(name='avg_retweets')
            metrics.append(avg_retweets)

        for m in metrics:
            activity = activity.merge(m, on='month', how='left')

        st.subheader("üìà –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ –º—ñ—Å—è—Ü—è—Ö")
        fig = px.bar(activity, 
                     x='month', 
                     y='tweets_count', 
                     text='tweets_count',
                     title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–≤—ñ—Ç—ñ–≤ –ø–æ –º—ñ—Å—è—Ü—è—Ö")
        
        if 'avg_likes' in activity.columns:
            fig.add_scatter(x=activity['month'], y=activity['avg_likes'], mode='lines+markers', name='–°–µ—Ä–µ–¥–Ω—ñ –ª–∞–π–∫–∏')
        if 'avg_retweets' in activity.columns:
            fig.add_scatter(x=activity['month'], y=activity['avg_retweets'], mode='lines+markers', name='–°–µ—Ä–µ–¥–Ω—ñ —Ä–µ–ø–æ—Å—Ç–∏')

        fig.update_layout(xaxis_title="–ú—ñ—Å—è—Ü—å", yaxis_title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–≤—ñ—Ç—ñ–≤ / —Å–µ—Ä–µ–¥–Ω—î")
        st.plotly_chart(fig, use_container_width=True)

    else:
        st.warning("‚ö†Ô∏è –£ —Ñ–∞–π–ª—ñ –º–∞—î –±—É—Ç–∏ –∫–æ–ª–æ–Ω–∫–∞ 'date' –∑ –¥–∞—Ç–æ—é –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó.")
else:
    st.error(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–æ—Ä–Ω–µ–≤—ñ–π –ø–∞–ø—Ü—ñ.")



